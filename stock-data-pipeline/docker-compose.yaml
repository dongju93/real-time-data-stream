services:
  postgres-stock:
    image: timescale/timescaledb:latest-pg16
    container_name: postgres-stock
    environment:
      - POSTGRES_PASSWORD=1q2w3e4r
      - POSTGRES_DB=stock
      - TIMESCALEDB_TUNE=false
    ports:
      - 5432:5432
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    command:
      - "postgres"
      # CDC 설정
      - "-c"
      - "wal_level=logical"
      - "-c"
      - "max_wal_senders=10"
      - "-c"
      - "max_replication_slots=10"
    networks:
      - stock_trade_network

  broker:
    image: apache/kafka:latest
    container_name: broker
    hostname: broker
    environment:
      # KRaft 모드 설정
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      # 리스너 설정
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093,EXTERNAL://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,EXTERNAL://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      # 복제 설정
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      # 성능 설정
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    ports:
      - 9094:9094
    networks:
      - stock_trade_network

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:9092
    # volumes:
    #   - ~/kui/config.yml:/etc/kafkaui/dynamic_config.yaml
    depends_on:
      - broker
    networks:
      - stock_trade_network

  debezium-connect:
    image: debezium/connect:3.0.0.Final
    container_name: debezium-connect
    hostname: debezium-connect
    ports:
      - 8083:8083
    environment:
      # Connect 클러스터 설정
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: stock-connect-configs
      OFFSET_STORAGE_TOPIC: stock-connect-offsets
      STATUS_STORAGE_TOPIC: stock-connect-status
      BOOTSTRAP_SERVERS: broker:9092
      CONNECT_BOOTSTRAP_SERVERS: broker:9092
      # Connect 워커 설정
      CONNECT_REST_ADVERTISED_HOST_NAME: localhost
      CONNECT_REST_PORT: 8083
      # 토픽 자동 생성 설정
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      # JSON 컨버터 설정
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
    depends_on:
      - broker
      - postgres-stock
    networks:
      - stock_trade_network

networks:
  stock_trade_network:

volumes:
  postgres_data:
